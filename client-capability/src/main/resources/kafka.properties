# 0表示不需要ack, 1表示只需要leader ack, 2表示所有副本都ack
ack=all

# 发送失败, 客户端重试次数
retries=3

# 设置请求的最大超时时间
request.timeout.ms=30000

# 当内存满了则阻塞，false会抛出BufferExhaustedException异常；
# 例如产生速度大于发送速度；
block.on.buffer.full=false

# 批次缓存的大小，默认16K, 调高可以吞吐量。单个消息比这个大，则不处理了
batch.size=32768

# 发送消息的缓存池大小, 默认32M
buffer.memory=67108864

# 在一定时间内，就算没有塞满batch都发送消息
linger.ms=100

bootstrap.servers=192.168.89.128:9092

# 日志清理策略，当过期或者达到最大了清理的策略
# delete则删除，compact则压缩，默认delete
log.cleanup.policy=delete

# 压缩的日志保留的最长时间，默认24小时
log.cleaner.delete.retention.ms=86400000

# 消息数量达到多少，日志落盘
log.flush.interval.messages=10000

# 距离上次落盘距离多久后，日志落盘
log.flush.interval.ms=1000

# 消息序列化用
key.serializer=org.apache.kafka.common.serialization.StringSerializer
value.serializer=org.apache.kafka.common.serialization.StringSerializer





